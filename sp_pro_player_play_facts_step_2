USE [Analytics]
GO

/****** Object:  StoredProcedure [dbo].[sp_stage_plays_player_data_additional_variables_defense]    Script Date: 5/16/2022 2:39:32 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO











ALTER procedure [dbo].[sp_stage_plays_player_data_additional_variables_defense] (@iSeason INT, @oReturnCD INT OUTPUT) as

/*********************************************************************************

Procedure Name:	sp_stage_plays_player_data_additional_variables_defense
Author:			Corey Krawiec
Creation Date:	08/10/2016
Description:       


	This program adds additional variables to PLAYER PLAY level staging tables.

	It needs to run later on because it uses variables that are generated by the position
	assignment code.

	1) - Safety Completions Allowed
	2) - Tackle Probability
	3) - Stop Stat

Updates:
	1)  08/10/2017 - Added where clauses so only the most recent season is refreshed daily.  
		If you want to refresh previous seasons, change the @iSeason variable in the main stored procedure that calls this one.
			
Input Parameters:
	@iSeason
	
Output Parameters:
	None 

Modifications:
Date         SE           Description

**********************************************************************************/

BEGIN 
  


	SET @oReturnCD  = 0

	/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

	(1)


	Create the safety coverage responsibility variable and add it to the player coverage table.

	TEMP TABLES:
		#temp_safety_coverage_variables

    STAGING TABLES (to update):            
		stage_plays_player_coverage
				    
	----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

	-- Check if #temp_safety_coverage_variables exists, if it does drop it
	IF OBJECT_ID('tempdb..#temp_safety_coverage_variables') IS NOT NULL
		DROP TABLE #temp_safety_coverage_variables

	SELECT prp.pff_pp_id
		  ,CASE WHEN role_pff = 'COVERAGE' AND (position_blt IN ('FS','SS') OR targeted_defender_primary = 1 OR targeted_defender_secondary = 1) AND air_yards > 0 THEN
					CASE WHEN targeted_defender_primary = 1
							  OR targeted_defender_secondary = 1 
						      OR (position_blt = 'FS' AND (((da.middle_of_field_played = 'OPEN' OR (da.middle_of_field_played = 'CLOSED' AND deep_defensive_back_count > 2)) AND align_side = 'LEFT' AND pass_zone IN ('RIGHT INSIDE NUMBERS','RIGHT OUTSIDE NUMBERS','RIGHT SIDELINE (3 YDS IN)') AND air_yards >= 12)
														OR ((da.middle_of_field_played = 'OPEN' OR (da.middle_of_field_played = 'CLOSED' AND deep_defensive_back_count > 2)) AND align_side = 'RIGHT' AND pass_zone IN ('LEFT SIDELINE (3 YDS IN)','LEFT OUTSIDE NUMBERS','LEFT INSIDE NUMBERS') AND air_yards >= 12)
														OR ((da.middle_of_field_played = 'OPEN' OR (da.middle_of_field_played = 'CLOSED' AND deep_defensive_back_count > 2)) AND align_side = 'MIDDLE' AND pass_zone IN ('LEFT INSIDE NUMBERS','MIDDLE (BETWEEN HASHES)','RIGHT INSIDE NUMBERS') AND air_yards >= 12)
														OR (da.middle_of_field_played = 'CLOSED' AND deep_defensive_back_count <= 2 AND ((pass_zone IN ('LEFT INSIDE NUMBERS','MIDDLE (BETWEEN HASHES)','RIGHT INSIDE NUMBERS') AND air_yards >= 12) OR (pass_zone IN ('LEFT OUTSIDE NUMBERS','RIGHT OUTSIDE NUMBERS') AND air_yards >= 20)))
														OR (pff_grade < 0 AND tackle_4_way_code >= 0 AND air_yards >= 12)
														OR (pff_grade > 0 AND tackle_4_way_code <= 0 AND air_yards >= 12))
								 )						
						      OR (position_blt IN ('SS') AND position_pff NOT LIKE '%-SR%' AND position_pff NOT LIKE '%-SIR%' AND position_pff NOT LIKE '%-SL%' AND position_pff NOT LIKE '%-SIL%'
								  AND ((pff_grade < 0 AND tackle_4_way_code >= 0 AND air_yards < 12) OR (pff_grade > 0 AND tackle_4_way_code <= 0 AND air_yards < 12))
								 )
						THEN 1 
						ELSE 0 
					END --Ends the air yards and positioning logic
				ELSE 0 
			END AS responsible_for_coverage_safety --Ends the role and position logic
		  ,CASE WHEN (targeted_defender_primary = 1 OR targeted_defender_secondary = 1)
					  AND (pass_result = 'COMPLETE' OR incompletion_type IN ('DROP') OR penalty_defensive_holding = 1 OR penalty_defensive_pass_interference = 1)
				      --AND NOT (air_yards < 2 AND tackle_4_way_code = 0) --This was part of the old safety logic
					  AND air_yards > 0
				THEN 1	
				ELSE 0 
			END AS completion_allowed_brv_safety
	INTO #temp_safety_coverage_variables
	FROM [stage_plays_player_coverage] prp
	INNER JOIN [stage_plays_player_defensive_alignment] pd --The player defensive alignment table
		ON prp.pff_pp_id = pd.pff_pp_id
	INNER JOIN [stage_plays_player_grade_defense] gd --The player grade table
		ON prp.pff_pp_id = gd.pff_pp_id
	INNER JOIN [stage_plays_player_tackle] ta --The player tackle table
		ON prp.pff_pp_id = ta.pff_pp_id
	LEFT JOIN [stage_plays_player_penalty] pen --The player penalty table
		ON prp.pff_pp_id = pen.pff_pp_id
	INNER JOIN [stage_plays_play_pass] pyp --The play pass table
		ON prp.pff_play_id = pyp.pff_play_id
	INNER JOIN [stage_plays_play_results] re --The play results table
		ON prp.pff_play_id = re.pff_play_id
	INNER JOIN [stage_plays_play_defensive_alignment] da --The play defensive alignment table
		ON prp.pff_play_id = da.pff_play_id
	INNER JOIN [stage_plays_play_type] ty --The play type table
		ON prp.pff_play_id = ty.pff_play_id
	INNER JOIN [stage_plays_play_ancillary] an --The play ancillary table
		ON prp.pff_play_id = an.pff_play_id
	WHERE is_pass = 1
		AND season >= @iSeason


	-- Update the stage_player_pass table
	UPDATE stage_plays_player_coverage
		SET [responsible_for_coverage_safety]  = sc.responsible_for_coverage_safety
		   ,[completion_allowed_brv_safety]  = sc.completion_allowed_brv_safety
	FROM #temp_safety_coverage_variables sc
	WHERE stage_plays_player_coverage.pff_pp_id = sc.pff_pp_id


  	/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

	(2)


	Update the player tackle table with the tackle probability.

	STAGING TABLES (to update): 
		stage_plays_player_tackle

	----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

	-- stage_plays_player_tackle
	UPDATE stage_plays_player_tackle
		SET [tackle_probability]  = r.tackle_probability
	FROM r_output_tackle_probability r
	WHERE stage_plays_player_tackle.pff_pp_id = r.pff_pp_id
	  --AND r.season = (SELECT MAX(season) FROM [stage_plays_play_ancillary])


  	/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

	(3)


	Update the player tackle table with Derrick's tackle probability.

	STAGING TABLES (to update): 
		stage_plays_player_tackle

	----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

	-- stage_plays_player_tackle
	UPDATE stage_plays_player_tackle
		SET [tackle_probability_derrick]  = r.tackle_probability
	FROM [r_output_tackle_probability_pro] r
	WHERE stage_plays_player_tackle.pff_pp_id = r.pff_pp_id
	  --AND r.season = (SELECT MAX(season) FROM [stage_plays_play_ancillary])


	/*-----------------------------------------------------------------------------------------------------------------------

	(4)

	
	Create the Stop Stat and add it to the player tackle table.

	Use pff pass breakups so you can go back to 2006 with this stat.

	TEMP TABLES : 
		#temp_stops

	STAGING TABLES (to update):
		stage_plays_player_tackle

	------------------------------------------------------------------------------------------------------------------------*/

	-- Check if #temp_stops, if it does drop it
	IF OBJECT_ID('tempdb..#temp_stops') IS NOT NULL
		DROP TABLE #temp_stops

	  SELECT pt.pff_pp_id
			,CASE WHEN pass_break_up_pff = 1 OR interception = 1 OR drawn_offensive_pass_interference = 1 THEN 1 
				  WHEN fumble_forced = 1 OR fumble_recovered = 1 THEN 1
				  WHEN qb_sack = 1 OR drawn_offensive_holding = 1 OR batted_pass = 1 THEN 1
				  WHEN is_pass = 1 AND tackle = 1 AND first_down_achieved = 0 THEN
						CASE WHEN down IN (1,2) THEN
								CASE WHEN position_blt IN ('NT','DT3T','DE5T','DE43') THEN CASE WHEN net_yards_play <= 2 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('MIKE','WILL','SAM','RUSH','IB','OB34') THEN CASE WHEN net_yards_play <= 3 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('CB','NB') THEN CASE WHEN net_yards_play <= 5 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('SS') THEN CASE WHEN net_yards_play <= 4 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('FS') THEN CASE WHEN net_yards_play <= 8 THEN 1 ELSE 0 END
									 WHEN net_yards_play <= 4 THEN 1 
									 ELSE 0
								END --Ends where down in (1,2)
							 ELSE 1
						END --Ends where it is a potential pass stop
 				  WHEN is_run = 1 AND tackle = 1 AND first_down_achieved = 0 THEN
						CASE WHEN down IN (1,2) THEN
								CASE WHEN position_blt IN ('NT','DT3T','DE5T','DE43') THEN CASE WHEN net_yards_play <= 3 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('MIKE','WILL','SAM','RUSH','IB','OB34') THEN CASE WHEN net_yards_play <= 2 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('CB','NB') THEN CASE WHEN net_yards_play <= 4 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('SS') THEN CASE WHEN net_yards_play <= 3 THEN 1 ELSE 0 END
									 WHEN position_blt IN ('FS') THEN CASE WHEN net_yards_play <= 6 THEN 1 ELSE 0 END
									 WHEN net_yards_play <= 3 THEN 1 
									 ELSE 0
								END --Ends where down in (1,2)
							 ELSE 1
						END --Ends where it is a potential pass stop    
				  WHEN is_pass = 1 AND role_pff = 'COVERAGE' AND time_to_throw >= 4.2 AND (targeted_defender_primary = 0 OR pass_result IN ('INCOMPLETE','INTERCEPTION','THROWN AWAY','RUN') OR qb_sack_play = 1) THEN 1 --Plaster Coverage
				  WHEN is_pass = 1 AND qb_pressure = 1 AND (pass_result IN ('INCOMPLETE','INTERCEPTION','THROWN AWAY') OR qb_sack_play = 1) THEN 1 --incompletion_type NOT IN ('OVERTHROW','UNDERTHROW','BEHIND RECEIVER','IN FRONT OF RECEIVER','CATCH OUT OF BOUNDS','HIT AS THROWN','THROW AWAY')
				  ELSE 0
			 END AS stop_brv
		  INTO #temp_stops
	FROM stage_plays_player_tackle pt
	INNER JOIN stage_plays_play_results re
		ON pt.pff_play_id = re.pff_play_id
	INNER JOIN stage_plays_play_context co
		ON pt.pff_play_id = co.pff_play_id
	INNER JOIN stage_plays_play_type ty
		ON pt.pff_play_id = ty.pff_play_id
	INNER JOIN stage_plays_play_pass_rush pr
		ON pt.pff_play_id = pr.pff_play_id
	INNER JOIN stage_plays_play_pass pa
		ON pt.pff_play_id = pa.pff_play_id
	INNER JOIN stage_plays_player_coverage pp
		ON pt.pff_pp_id = pp.pff_pp_id
	INNER JOIN stage_plays_player_defensive_alignment pos
		ON pt.pff_pp_id = pos.pff_pp_id
	INNER JOIN stage_plays_player_pass_rush ppr
		ON pt.pff_pp_id = ppr.pff_pp_id
	LEFT JOIN stage_plays_player_penalty pen
		ON pt.pff_pp_id = pen.pff_pp_id
	INNER JOIN stage_plays_play_ancillary an
		ON pt.pff_play_id = an.pff_play_id
	WHERE season >= @iSeason


	-- Update the stage_plays_player_tackle table
	UPDATE stage_plays_player_tackle
		SET stop_brv  = st.stop_brv
	FROM #temp_stops st
	WHERE stage_plays_player_tackle.pff_pp_id = st.pff_pp_id



	PROC_END:

	RETURN @oReturnCD  

END

















GO


