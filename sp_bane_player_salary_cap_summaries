


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

This program is for creating a player salary cap information table.

v13 tried to use "earned" and "guaranteed" to get future dead money.


**Keep an eye on what happens to Fletcher Cox in the 2017 league year for future years. Once his guaranteed "option" bonus 
actually gets paid, is that getting double counted because it is in the "SB" field and the cap already earned field?
Also, does PotAccel increase once it is paid out? Because right now only the prorated initial signing bonus is in there (5.2
mil per year against the cap, and the 1.2 mil per year from the option bonus is not in there).

Maybe in addition to cap already earned, make a prorated cap already / not earned, and then you can take out unearned prorated from the 
SB field, and then once it is earned, you can take it out of the cap already earned because it is back in the prorated SB field**


**If a player has already been traded on that contract, then his new team has no dead hit if he gets traded?**

**For Cap Casualty, go with the LTBE and dead money as it would be before the league year changes. for example...if a guy was a cap casualty 
before the 2015 season, his dead money shouldn't be what it was for the end of the 2015 season, it should be what it was as of the day cut..
ltbe and other bonuses probably weren't paid yet.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with the more specific cap distribution. So you can separate out option, roster, etc. bonuses.

OUTPUT TABLES:
#temp_cap_details

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_cap_details exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_details') IS NOT NULL
	DROP TABLE #temp_cap_details

    SELECT PlayerID AS nfl_player_id
		  ,Season AS season
		  ,ClubID AS nfl_club_id
		  ,FromDate AS from_date
		  ,ToDate AS to_date
		  ,[Off-Season] AS cap_details_offseason_bonus
		  ,[Option] AS cap_details_option_bonus
		  ,[Roster Bonus] AS cap_details_roster_bonus
		  ,[Salary Advance] AS cap_details_salary_advance
	  INTO #temp_cap_details
      FROM (
    SELECT PlayerID
		  ,Season
		  ,ClubID
		  ,FromDate
		  ,ToDate
		  ,SectionType
		  ,CapAmount  
      FROM ClubDB.dbo.CapDetails) up
     PIVOT (MAX(CapAmount) FOR SectionType IN ([Off-Season],[Option],[Roster Bonus],[Salary Advance])) AS pvt
     WHERE Season >= 2011
  ORDER BY PlayerID
		  ,Season
 /*
 SELECT *
 FROM #temp_cap_details_with_earned_guaranteed
 WHERE PLAYERID=28037
 ORDER BY season
 */


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that notes early cash. Like Flacco in 2012, that cash was really for 2013 but was paid before end of league year.

OUTPUT TABLES:
#temp_early_cash

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_signing_bonus_lag exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_signing_bonus_lag') IS NOT NULL
	DROP TABLE #temp_signing_bonus_lag

    SELECT PlayerID AS nfl_player_id
		  ,cap.Season AS season
		  ,cap.Season + 1 AS season_to_move_cash_to
		  ,ClubID AS nfl_club_id
		  ,LAG(ClubID) OVER (PARTITION BY PlayerID, ClubID ORDER BY cap.Season, COALESCE(ToDate,'12/31/2099')) as nfl_club_id_previous
		  ,FromDate AS from_date
		  ,ToDate AS to_date
		  ,regular_season_end
		  ,LAG(CashSB_SB) OVER (PARTITION BY PlayerID, ClubID ORDER BY cap.Season, COALESCE(ToDate,'12/31/2099')) as signing_bonus_previous_record
		  ,CashSB_SB AS signing_bonus
		  ,LAG(CashSB_Option) OVER (PARTITION BY PlayerID, ClubID ORDER BY cap.Season, COALESCE(ToDate,'12/31/2099')) as option_bonus_previous_record
		  ,CashSB_Option AS option_bonus
		  ,LAG(CashLTBE_RB) OVER (PARTITION BY PlayerID, ClubID ORDER BY cap.Season, COALESCE(ToDate,'12/31/2099')) as roster_bonus_previous_record
		  ,CashLTBE_RB AS roster_bonus
	  INTO #temp_signing_bonus_lag
      FROM ClubDB.dbo.CapRollup cap
INNER JOIN Analytics.dbo.map_nfl_league_year_dates ld
		ON cap.Season = ld.season
	 WHERE cap.Season >= 2011
  ORDER BY PlayerID
		  ,Season

 -- Check if #temp_early_cash exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_early_cash') IS NOT NULL
	DROP TABLE #temp_early_cash

    SELECT nfl_player_id
		  ,season
		  ,season_to_move_cash_to
		  ,nfl_club_id
		  ,from_date
		  ,to_date
		  ,signing_bonus - signing_bonus_previous_record AS early_cash_signing_bonus
		  ,option_bonus - option_bonus_previous_record AS early_cash_option_bonus
		  ,roster_bonus - roster_bonus_previous_record AS early_cash_roster_bonus
	  INTO #temp_early_cash
      FROM #temp_signing_bonus_lag
	 WHERE from_date >= regular_season_end
	   AND ((signing_bonus - signing_bonus_previous_record) > 0
		   OR (option_bonus - option_bonus_previous_record) > 0
		   OR (roster_bonus - roster_bonus_previous_record) > 0)
	   AND nfl_club_id_previous = nfl_club_id

 /*
 SELECT *
 FROM #temp_signing_bonus_lag
 WHERE nfl_player_id = 37078
 ORDER BY nfl_club_id, Season, COALESCE(To_Date,'12/31/2099')
 */
		  
/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that has cap money already earned.

OUTPUT TABLES:
#temp_cap_already_earned

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_contract_section_earned exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_contract_section_earned') IS NOT NULL
	DROP TABLE #temp_contract_section_earned

	SELECT PlayerID AS nfl_player_id
		  ,ClubID AS nfl_club_id
		  ,cd.Season AS season		  
		  ,FromDate AS from_date
		  ,SUM([Amount]) AS cap_already_earned
	  INTO #temp_contract_section_earned
	  FROM ClubDB.dbo.SectionYearEventRep sr
INNER JOIN ClubDB.dbo.CapDetails cd
		ON sr.SectionID = cd.SectionID
       AND sr.Season = cd.Season
     WHERE COALESCE(EventDate,CalculatedEventDate) <= GETDATE()
	   AND sr.Season >= 2011
  GROUP BY PlayerID
		  ,ClubID
		  ,cd.Season
		  ,FromDate

-- Check if #temp_cap_already_earned exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_already_earned') IS NOT NULL
	DROP TABLE #temp_cap_already_earned

	SELECT nfl_player_id
		  ,nfl_club_id
		  ,season		  
		  ,from_date
		  ,LEAD(from_date) OVER (PARTITION BY nfl_player_id, nfl_club_id, season ORDER BY from_date) AS to_date
		  ,(SELECT SUM(cap_already_earned)
		      FROM #temp_contract_section_earned cs2
			 WHERE cs2.nfl_player_id = cs1.nfl_player_id
			   AND cs2.nfl_club_id = cs1.nfl_club_id
			   AND cs2.season = cs1.season
			   AND cs2.from_date >= cs1.from_date) 
		    AS cap_already_earned
	  INTO #temp_cap_already_earned
	  FROM #temp_contract_section_earned cs1

 /*
 SELECT *
 FROM #temp_contract_section_earned
 WHERE nfl_player_id = 38590
 ORDER BY nfl_club_id, Season
 */


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that has future guaranteed cap money.

OUTPUT TABLES:
#temp_future_guaranteed_money

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_guaranteed_minus_earned exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_guaranteed_minus_earned') IS NOT NULL
	DROP TABLE #temp_guaranteed_minus_earned

    SELECT PlayerID AS nfl_player_id
	      ,cg.Season AS season
		  ,ClubID AS nfl_club_id
		  ,ToDate AS to_date
		  ,SUM(CASE WHEN COALESCE(Amount,0) >= Guar_Cap THEN 0 ELSE Guar_Cap - COALESCE(Amount,0) END) AS guaranteed_cap		   
	  INTO #temp_guaranteed_minus_earned
	  FROM ClubDB.dbo.CapGuarantee cg
 LEFT JOIN ClubDB.dbo.SectionYearEventRep sr
		ON cg.SectionID = sr.SectionID
	   AND cg.Season = sr.Season
	 WHERE Effective = 1
	   AND cg.Season >= 2011
	   AND cg.Guar_Cap > 0
	   AND ChangingSectionID = 0
  GROUP BY PlayerID
	      ,cg.Season
		  ,ClubID
		  ,ToDate

-- Check if #temp_future_guaranteed_money exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_future_guaranteed_money') IS NOT NULL
	DROP TABLE #temp_future_guaranteed_money

    SELECT nfl_player_id
	      ,season
		  ,nfl_club_id
		  ,to_date
		  ,(SELECT SUM(guaranteed_cap)
		      FROM #temp_guaranteed_minus_earned gm2
			 WHERE gm2.nfl_player_id = gm1.nfl_player_id
			   AND gm2.nfl_club_id = gm1.nfl_club_id
			   AND COALESCE(gm2.to_date,'12/31/2099') = COALESCE(gm1.to_date,'12/31/2099')
			   AND gm2.season >= gm1.season) 
		    AS future_guaranteed_money
	  INTO #temp_future_guaranteed_money
	  FROM #temp_guaranteed_minus_earned gm1

/*
SELECT *
FROM #temp_future_guaranteed_money
WHERE nfl_player_id = 37078
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with a player's cap hit and dead money.

Sandy's old SAS code added a day to the cap end date and then called the
variable up_to_but_not_including. Below is the code if you want to change
to that at some point.

COALESCE(DATEADD(DAY,1, ToDate),'12/31/2088')

The reason to include current year roster bonus in dead money calculation is that typically roster bonuses paid
in first few days of the league year count on that year's cap. So if we are already date wise in the current league
year, that bonus has likely already been paid, so it would be dead money.  May not be perfect but seems to work
well for now. You also subtract out the "already guaranteed" roster bonus to avoid double counting.

OUTPUT TABLES:
#temp_cap_hits

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

DECLARE @current_season INT
SELECT @current_season = (SELECT season FROM Analytics.dbo.map_nfl_league_year_dates WHERE GETDATE() BETWEEN league_year_start AND league_year_end)

-- Check if #temp_cap_hits exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_hits') IS NOT NULL
	DROP TABLE #temp_cap_hits

    SELECT PlayerID AS nfl_player_id
		  ,CONCAT(last_name,', ',goes_by) AS player
	      ,ClubID AS nfl_club_id
		  ,cap.Season AS season
		  ,CASE WHEN CapAmt > 0 AND Cash = 0 AND cap.season >= 2002 AND Para5 = 0 THEN 1 
				WHEN cap.season >= @current_season AND cap.ClubID <> (SELECT ClubID FROM ClubDB.dbo.PlayerExtract pe WHERE pe.PlayerID = cap.PlayerID) THEN 1
				ELSE 0
		   END AS dead_money_flag
		  ,CapAmt AS cap_amount
		  ,Cash 
			+ COALESCE(eca.early_cash_signing_bonus,0) - COALESCE(ecs.early_cash_signing_bonus,0)
			+ COALESCE(eca.early_cash_roster_bonus,0) - COALESCE(ecs.early_cash_roster_bonus,0)
			+ COALESCE(eca.early_cash_option_bonus,0) - COALESCE(ecs.early_cash_option_bonus,0)
		   AS cash_amount
		  ,Para5 AS cap_paragraph_5
		  ,CashP5 AS cash_paragraph_5
		  ,SB AS cap_signing_bonus
		  ,CashSB_SB AS cash_signing_bonus
		  ,LTBE AS cap_likely_to_be_earned
		  ,CashLTBE_OffSeason AS cash_likely_to_be_earned_offseason
		  ,CashLTBE_Other AS cash_likely_to_be_earned_other
		  ,CashLTBE_RB AS cash_roster_bonus
		  ,CashSB_Option AS cash_option_bonus
		  ,cap_details_offseason_bonus
		  ,cap_details_option_bonus
		  ,cap_details_roster_bonus
		  ,SB
		  ,PotAccel
		  ,COALESCE(future_guaranteed_money,0) as fgm
		  ,COALESCE(cap_already_earned,0) as cae		  
		  ,CASE WHEN CashSB_Option > 0 THEN SB + PotAccel + COALESCE(future_guaranteed_money,0) + COALESCE(cap_already_earned,0) - COALESCE(cap_details_option_bonus,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END
				ELSE SB + PotAccel + COALESCE(future_guaranteed_money,0) + COALESCE(cap_already_earned,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END
		   END AS dead_cap
		  ,CapAmt - (CASE WHEN CashSB_Option > 0 THEN SB + PotAccel + COALESCE(future_guaranteed_money,0) + COALESCE(cap_already_earned,0) - COALESCE(cap_details_option_bonus,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END
						  ELSE SB + PotAccel + COALESCE(future_guaranteed_money,0) + COALESCE(cap_already_earned,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END END)
		   AS cap_savings
		  ,SB + COALESCE(future_guaranteed_money,0) + COALESCE(cap_already_earned,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END AS dead_cap_post_june_1
		  ,CapAmt - (SB + COALESCE(future_guaranteed_money,0) + COALESCE(cap_already_earned,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END) AS cap_savings_post_june_1
		  ,SB + PotAccel + COALESCE(cap_already_earned,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END AS dead_cap_trade
		  ,CapAmt - (SB + PotAccel + COALESCE(cap_already_earned,0) + CASE WHEN cap.season = @current_season AND MONTH(GETDATE()) >= 6 THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END) AS cap_savings_trade
		  ,Misc AS cap_miscellaneous
		  ,PotAccel AS cap_potential_acceleration
		  ,FullP5 AS cap_full_paragraph_5
		  ,Top51Delta AS cap_top_51_delta
		  ,cap.FromDate AS cap_start_date
		  ,cap.ToDate AS cap_end_date
		  ,CASE WHEN COALESCE(cap.ToDate,'12/31/2088') <= da.regular_season_end THEN 1 ELSE 0 END AS cap_in_season_date_range
	  INTO #temp_cap_hits
      FROM ClubDB.dbo.CapRollup cap
INNER JOIN Analytics.dbo.map_nfl_league_year_dates da
		ON cap.season = da.season
INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON cap.PlayerID = pl.nfl_id
 LEFT JOIN #temp_cap_details cd
		ON cd.nfl_player_id = cap.PlayerID
	   AND cd.Season = cap.Season
	   AND cd.nfl_club_id = cap.ClubID
	   AND cd.from_date = cap.FromDate
	   AND COALESCE(cd.to_date,'12/31/2099') = COALESCE(cap.ToDate,'12/31/2099')
 LEFT JOIN #temp_early_cash eca
		ON eca.nfl_player_id = cap.PlayerID
	   AND eca.season_to_move_cash_to = cap.Season
	   AND eca.nfl_club_id = cap.ClubID
	   --AND eca.from_date = cap.FromDate
	   AND COALESCE(eca.to_date,'12/31/2099') =  COALESCE(cap.ToDate,'12/31/2099')
 LEFT JOIN #temp_early_cash ecs
		ON ecs.nfl_player_id = cap.PlayerID
	   AND ecs.season = cap.Season
	   AND ecs.nfl_club_id = cap.ClubID
	   --AND ecs.from_date = cap.FromDate
	   AND COALESCE(ecs.to_date,'12/31/2099') =  COALESCE(cap.ToDate,'12/31/2099')
 LEFT JOIN #temp_cap_already_earned ae
		ON ae.nfl_player_id = cap.PlayerID
	   AND ae.season = cap.Season
	   AND ae.nfl_club_id = cap.ClubID
	   AND cap.FromDate >= ae.from_date
	   AND cap.FromDate < COALESCE(ae.to_date,'12/31/2099')
 LEFT JOIN #temp_future_guaranteed_money fg
		ON fg.nfl_player_id = cap.PlayerID
	   AND fg.season = cap.Season
	   AND fg.nfl_club_id = cap.ClubID
	   AND COALESCE(fg.to_date,'12/31/2099') =  COALESCE(cap.ToDate,'12/31/2099')
	 WHERE 1=1
	   AND cap.season >= (SELECT MIN(FirstContractYear) FROM ClubDB.dbo.ContractRep WHERE EffectiveContract = 1)
	   AND (CapAmt + Para5 + SB + LTBE + PotAccel) <> 0
	   --AND cap.ToDate IS NULL
  ORDER BY PlayerID
		  ,ClubID
		  ,season
		  ,cap.FromDate

/*
SELECT *
FROM #temp_cap_hits ch1
WHERE cap_end_date IS NULL
ORDER BY nfl_player_id, season, nfl_club_id, cap_start_date
*/
