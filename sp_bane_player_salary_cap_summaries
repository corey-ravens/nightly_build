


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

This program is for creating a player salary cap information table.

for dead money for the curretne year, if after june 1 the other signing bonus doesn't accelerate, that happends next year,
so dead is termination pay plus that years' signing bonus, but no ltbes.

V2 changes the future guaranteed money to a subselect.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with the more specific cap distribution. So you can separate out option, roster, etc. bonuses.

OUTPUT TABLES:
#temp_cap_details

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_cap_details exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_details') IS NOT NULL
	DROP TABLE #temp_cap_details

    SELECT PlayerID AS nfl_player_id
		  ,Season AS season
		  ,[Buyback] AS cap_details_buyback
		  ,[Deion Rule] AS cap_details_deion_rule
		  ,[Escalator] AS cap_details_escalator
		  ,[Grievance] AS cap_details_grievance
		  ,[Incentive] AS cap_details_incentive
		  ,[Incentives/Other Terms] AS cap_details_incentive_other_terms
		  ,[Injury Protection] AS cap_details_injury_protection
		  ,[Injury Settlement] AS cap_details_injury_settlement
		  ,[LTBE] AS cap_details_ltbe
		  ,[Misc] AS cap_details_misc
		  ,[Off-Season] AS cap_details_offseason_bonus
		  ,[Option] AS cap_details_option_bonus
		  ,[Other Compensation] AS cap_details_other_compensation
		  ,[Other Terms] AS cap_details_other_terms
		  ,[P5] AS cap_details_p5
		  ,[PCMS Misc] AS cap_details_pcms_misc
		  ,[PF] AS cap_details_pf
		  ,[ReAllocation] AS cap_details_reallocation
		  ,[Reporting Bonus] AS cap_details_reporting_bonus
		  ,[Roster Bonus] AS cap_details_roster_bonus
		  ,[Salary Advance] AS cap_details_salary_advance
		  ,[Signing Bonus] AS cap_details_signing_bonus
		  ,[Termination Pay] AS cap_details_termination_pay
		  ,[Vet Cap Credit] AS cap_details_vet_cap_credit
	  INTO #temp_cap_details
      FROM (
    SELECT PlayerID
		  ,Season
		  ,ToDate
		  ,SectionType
		  ,CapAmount		  
      FROM ClubDB.dbo.CapDetails) up
     PIVOT (MAX(CapAmount) FOR SectionType IN ([Buyback],[Deion Rule],[Escalator],[Grievance],[Incentive],[Incentives/Other Terms],[Injury Protection]
											  ,[Injury Settlement],[LTBE],[Misc],[Off-Season],[Option],[Other Compensation],[Other Terms],[P5],[PCMS Misc],[PF]
											  ,[ReAllocation],[Reporting Bonus],[Roster Bonus],[Salary Advance],[Signing Bonus],[Termination Pay]
											  ,[Vet Cap Credit])) AS pvt
	 WHERE Season >= 2011
	   AND ToDate IS NULL
  ORDER BY PlayerID
		  ,Season

		  

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with the potential bonus acceleration if a player is cut. Only do it for current and
future seasons.  Don't worry about previous dead cap hits because it is already past.

OUTPUT TABLES:
#temp_bonus_acceleration

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_bonus_acceleration exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_bonus_acceleration') IS NOT NULL
	DROP TABLE #temp_bonus_acceleration

    SELECT PlayerID AS nfl_player_id
		  ,Season AS season
		  ,(SELECT SUM(SB) FROM ClubDB.dbo.CapRollup cap2 WHERE cap.PlayerID = cap2.PlayerID AND cap2.season >= cap.season AND cap2.ToDate IS NULL) AS bonus_acceleration
		  ,SB AS bonus_acceleration_post_june_1
		  ,(SELECT SUM(SB) FROM ClubDB.dbo.CapRollup cap2 WHERE cap.PlayerID = cap2.PlayerID AND cap2.season >= cap.season AND cap2.ToDate IS NULL) - SB AS bonus_acceleration_next_season_post_june_1
	  INTO #temp_bonus_acceleration
	  FROM ClubDB.dbo.CapRollup cap
	  WHERE cap.ToDate IS NULL
		AND cap.season >= (SELECT MAX(season) FROM [Analytics].[dbo].[analysis_players_gameweek_status])

/*
SELECT * 
FROM #temp_bonus_acceleration
WHERE nfl_player_id = 32279
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that has guaranteed P5 salaries for termination pay eligible players

OUTPUT TABLES:
#temp_termination_pay_guaranteed_p5

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_termination_pay_players exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_termination_pay_players') IS NOT NULL
	DROP TABLE #temp_termination_pay_players

    SELECT nfl_player_id
	  INTO #temp_termination_pay_players
	  FROM Analytics.dbo.analysis_players_gameweek_status gs 
INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON gs.nfl_player_id = pl.nfl_id
	 WHERE gs.season = (SELECT MAX(season) FROM [Analytics].[dbo].[analysis_players_gameweek_status])
	   AND UPPER(gs.season_type) = 'REG'
	   AND gs.[week] = 1
	   AND status_roster_simple IN ('ACTIVE','INACTIVE','INJURED','PUP','SUSPENDED','EXEMPT')
	   AND termination_pay_eligible = 1 


-- Check if #temp_termination_pay_guaranteed_p5 exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_termination_pay_guaranteed_p5') IS NOT NULL
	DROP TABLE #temp_termination_pay_guaranteed_p5

    SELECT cap.PlayerID AS nfl_player_id
		  ,Para5 AS p5_termination_pay_guarantee
	  INTO #temp_termination_pay_guaranteed_p5
	  FROM ClubDB.dbo.CapRollup cap
INNER JOIN #temp_termination_pay_players tp
		ON cap.PlayerID = tp.nfl_player_id
	 WHERE cap.season = (SELECT MAX(season) FROM [Analytics].[dbo].[analysis_players_gameweek_status]) 
	   AND cap.ToDate IS NULL

/*
SELECT * 
FROM #temp_termination_pay_guaranteed_p5
WHERE nfl_player_id = 28649
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that has future guaranteed P5.

This needs to have a season so that it doesn't get added to all future seasons.

OUTPUT TABLES:
#temp_future_guaranteed_p5

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_future_guaranteed_p5 exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_future_guaranteed_p5') IS NOT NULL
	DROP TABLE #temp_future_guaranteed_p5

    SELECT cg.PlayerID AS nfl_player_id
	      ,cg.Season AS season
		  ,CASE WHEN cg.Season = (SELECT MAX(season) FROM [Analytics].[dbo].[analysis_players_gameweek_status]) THEN cg.Guar_Cap
		        ELSE cg.Guar_Cap - CashSB_SB - CashSB_Option 
		   END AS p5_future_guarantee
	  INTO #temp_future_guaranteed_p5
	  FROM ClubDB.dbo.CapGuarantee cg
INNER JOIN ClubDB.dbo.CapRollup cr
		ON cg.PlayerID = cr.PlayerID
	   AND cg.Season = cr.Season
	   AND cr.ToDate IS NULL
	 WHERE Effective = 1
	   AND cg.season >= (SELECT MAX(season) FROM [Analytics].[dbo].[analysis_players_gameweek_status]) 
  ORDER BY cg.PlayerID
	      ,cg.Season

/*	   
SELECT *
FROM #temp_future_guaranteed_p5
WHERE nfl_player_id = 43295
ORDER BY Season
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with a player's cap hit and dead money. For previous years just NULL out dead money.

Sandy's old SAS code added a day to the cap end date and then called the
variable up_to_but_not_including. Below is the code if you want to change
to that at some point.

COALESCE(DATEADD(DAY,1, ToDate),'12/31/2088')

OUTPUT TABLES:
#temp_cap_hits

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

	DECLARE @current_season INT
	SELECT @current_season = (SELECT MAX(season) FROM [Analytics].[dbo].[analysis_players_gameweek_status])

-- Check if #temp_cap_hits exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_hits') IS NOT NULL
	DROP TABLE #temp_cap_hits

    SELECT PlayerID AS nfl_player_id
		  ,CONCAT(last_name,', ',goes_by) AS player
	      ,ClubID AS nfl_club_id
		  --,cl.id AS bane_club_id
		  ,cap.Season AS season
		  ,CASE WHEN CapAmt > 0 AND Cash = 0 AND cap.season >= 2002 AND Para5 = 0 THEN 1 ELSE 0 END AS dead_money_flag
		  ,CapAmt AS cap_amount
		  ,Para5 AS cap_paragraph_5
		  ,SB AS cap_signing_bonus
		  ,LTBE AS cap_likely_to_be_earned
		  ,cap_details_offseason_bonus
		  ,cap_details_signing_bonus
		  ,cap_details_option_bonus
		  ,cap_details_roster_bonus
		  ,Misc AS cap_miscellaneous
		  ,PotAccel AS cap_potential_acceleration
		  ,FullP5 AS cap_full_paragraph_5
		  ,Top51Delta AS cap_top_51_delta
		  ,CASE WHEN cap.season = @current_season THEN CASE WHEN GETDATE() >= regular_season_start THEN COALESCE(p5_termination_pay_guarantee,0) ELSE 0 END
													    + SB  
				WHEN cap.Season > @current_season THEN COALESCE(bonus_acceleration,0) 
														+ CASE WHEN cap.Season = @current_season AND GETDATE() >= regular_season_start THEN COALESCE(p5_termination_pay_guarantee,0) ELSE 0 END
														+ COALESCE((SELECT SUM(p5_future_guarantee) FROM #temp_future_guaranteed_p5 fu WHERE cap.PlayerID = fu.nfl_player_id AND fu.season >= cap.Season),0) --CASE WHEN cap.Season <= fu.season THEN COALESCE(p5_future_guarantee,0) ELSE 0 END 
				ELSE NULL
		   END AS dead_cap
		  ,CASE WHEN cap.Season > @current_season THEN SB 
													 + COALESCE((SELECT SUM(p5_future_guarantee) FROM #temp_future_guaranteed_p5 fu WHERE cap.PlayerID = fu.nfl_player_id AND fu.season >= cap.Season),0) --CASE WHEN cap.Season <= fu.season THEN COALESCE(p5_future_guarantee,0) ELSE 0 END
		        WHEN cap.Season = @current_season THEN CapAmt
													 + COALESCE((SELECT SUM(p5_future_guarantee) FROM #temp_future_guaranteed_p5 fu WHERE cap.PlayerID = fu.nfl_player_id AND fu.season >= cap.Season),0) --CASE WHEN cap.Season <= fu.season THEN COALESCE(p5_future_guarantee,0) ELSE 0 END
				ELSE NULL
		   END AS dead_cap_post_june_1
		  ,CASE WHEN cap.Season >= @current_season THEN COALESCE(bonus_acceleration_next_season_post_june_1,0)
														+ COALESCE((SELECT SUM(p5_future_guarantee) FROM #temp_future_guaranteed_p5 fu WHERE cap.PlayerID = fu.nfl_player_id AND fu.season > cap.Season),0) --CASE WHEN cap.Season < fu.season THEN COALESCE(p5_future_guarantee,0) ELSE 0 END
				ELSE NULL
		   END AS dead_cap_next_season_post_june_1
		  ,FromDate AS cap_start_date
		  ,ToDate AS cap_end_date
		  ,CASE WHEN FromDate < league_year_start THEN league_year_start ELSE FromDate END AS cap_season_start_date
		  ,CASE WHEN COALESCE(ToDate,'12/31/2088') > league_year_end THEN league_year_end ELSE COALESCE(ToDate,'12/31/2088') END AS cap_season_end_date
		  ,RANK() OVER (PARTITION BY PlayerID, ClubID, cap.Season ORDER BY COALESCE(ToDate,'12/31/2088') DESC, FromDate) AS cap_hit_order
	  INTO #temp_cap_hits
      FROM ClubDB.dbo.CapRollup cap
INNER JOIN Analytics.dbo.map_nfl_league_year_dates da
		ON cap.season = da.season
/*INNER JOIN BaneProductionAnalytics.dbo.clubs cl
		ON cap.ClubID = cl.nfl_club_id
	   AND cl.is_disabled = 0*/
 LEFT JOIN #temp_bonus_acceleration ba
		ON ba.nfl_player_id = cap.PlayerID
	   AND ba.season = cap.season
 LEFT JOIN #temp_termination_pay_guaranteed_p5 tp
		ON tp.nfl_player_id = cap.PlayerID
 LEFT JOIN #temp_cap_details cd
		ON cd.nfl_player_id = cap.PlayerID
	   AND cd.Season = cap.Season
INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON cap.PlayerID = pl.nfl_id
	 WHERE 1=1
	   AND cap.season >= (SELECT MIN(FirstContractYear) FROM ClubDB.dbo.ContractRep WHERE EffectiveContract = 1)
  ORDER BY PlayerID
		  ,ClubID
		  ,season
		  ,FromDate

/*
SELECT * FROM #temp_cap_hits
WHERE cap_end_date IS NULL
WHERE nfl_player_id = 28649
*/

