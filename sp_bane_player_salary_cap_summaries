


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

This program is for creating a player salary cap information table.

Byron Maxwell - dead money off by 3 mil in 2016 and 2 mil high in 2017 - because nfl says 5 mil salary next year guaranteed, OTC says 3 mil 
Ndamukong Suh - dead money off by 10 mil in 2017 - NFL has 10 more mil future guarnateed than OTC has
Fletcher Cox - NFL has 9 million in future guaranteed money, OTC only 3

v7 takes out the termination pay and makes roster bonus its own table so you can exclude it if it is already guaranteed.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with the more specific cap distribution. So you can separate out option, roster, etc. bonuses.

OUTPUT TABLES:
#temp_cap_details
#temp_cash_details

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_cap_details exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_details') IS NOT NULL
	DROP TABLE #temp_cap_details

    SELECT PlayerID AS nfl_player_id
		  ,Season AS season
		  ,ClubID AS nfl_club_id
		  ,[Buyback] AS cap_details_buyback
		  ,[Deion Rule] AS cap_details_deion_rule
		  ,[Escalator] AS cap_details_escalator
		  ,[Grievance] AS cap_details_grievance
		  ,[Incentive] AS cap_details_incentive
		  ,[Incentives/Other Terms] AS cap_details_incentive_other_terms
		  ,[Injury Protection] AS cap_details_injury_protection
		  ,[Injury Settlement] AS cap_details_injury_settlement
		  ,[LTBE] AS cap_details_ltbe
		  ,[Misc] AS cap_details_misc
		  ,[Off-Season] AS cap_details_offseason_bonus
		  ,[Option] AS cap_details_option_bonus
		  ,[Other Compensation] AS cap_details_other_compensation
		  ,[Other Terms] AS cap_details_other_terms
		  ,[P5] AS cap_details_p5
		  ,[PCMS Misc] AS cap_details_pcms_misc
		  ,[PF] AS cap_details_pf
		  ,[ReAllocation] AS cap_details_reallocation
		  ,[Reporting Bonus] AS cap_details_reporting_bonus
		  ,[Roster Bonus] AS cap_details_roster_bonus
		  ,[Salary Advance] AS cap_details_salary_advance
		  ,[Signing Bonus] AS cap_details_signing_bonus
		  ,[Termination Pay] AS cap_details_termination_pay
		  ,[Vet Cap Credit] AS cap_details_vet_cap_credit
	  INTO #temp_cap_details
      FROM (
    SELECT PlayerID
		  ,Season
		  ,ClubID
		  ,ToDate
		  ,SectionType
		  ,CapAmount		  
      FROM ClubDB.dbo.CapDetails) up
     PIVOT (MAX(CapAmount) FOR SectionType IN ([Buyback],[Deion Rule],[Escalator],[Grievance],[Incentive],[Incentives/Other Terms],[Injury Protection]
											  ,[Injury Settlement],[LTBE],[Misc],[Off-Season],[Option],[Other Compensation],[Other Terms],[P5],[PCMS Misc],[PF]
											  ,[ReAllocation],[Reporting Bonus],[Roster Bonus],[Salary Advance],[Signing Bonus],[Termination Pay]
											  ,[Vet Cap Credit])) AS pvt
	 WHERE Season >= 2011
	   AND ToDate IS NULL
  ORDER BY PlayerID
		  ,Season
 /*
 SELECT *
 FROM #temp_caSH_details
 WHERE nfl_player_id = 37248
 ORDER BY season
 */


-- Check if #temp_cash_details exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cash_details') IS NOT NULL
	DROP TABLE #temp_cash_details

    SELECT PlayerID AS nfl_player_id
		  ,Season AS season
		  ,ClubID AS nfl_club_id
		  ,[Buyback] AS cash_details_buyback
		  ,[Deion Rule] AS cash_details_deion_rule
		  ,[Escalator] AS cash_details_escalator
		  ,[Grievance] AS cash_details_grievance
		  ,[Incentive] AS cash_details_incentive
		  ,[Incentives/Other Terms] AS cash_details_incentive_other_terms
		  ,[Injury Protection] AS cash_details_injury_protection
		  ,[Injury Settlement] AS cash_details_injury_settlement
		  ,[LTBE] AS cash_details_ltbe
		  ,[Misc] AS cash_details_misc
		  ,[Off-Season] AS cash_details_offseason_bonus
		  ,[Option] AS cash_details_option_bonus
		  ,[Other Compensation] AS cash_details_other_compensation
		  ,[Other Terms] AS cash_details_other_terms
		  ,[P5] AS cash_details_p5
		  ,[PCMS Misc] AS cash_details_pcms_misc
		  ,[PF] AS cash_details_pf
		  ,[ReAllocation] AS cash_details_reallocation
		  ,[Reporting Bonus] AS cash_details_reporting_bonus
		  ,[Roster Bonus] AS cash_details_roster_bonus
		  ,[Salary Advance] AS cash_details_salary_advance
		  ,[Signing Bonus] AS cash_details_signing_bonus
		  ,[Termination Pay] AS cash_details_termination_pay
		  ,[Vet Cap Credit] AS cash_details_vet_cash_credit
	  INTO #temp_cash_details
      FROM (
    SELECT PlayerID
		  ,Season
		  ,ClubID
		  ,ToDate
		  ,SectionType
		  ,CashAmount		  
      FROM ClubDB.dbo.CapDetails) up
     PIVOT (MAX(CashAmount) FOR SectionType IN ([Buyback],[Deion Rule],[Escalator],[Grievance],[Incentive],[Incentives/Other Terms],[Injury Protection]
											  ,[Injury Settlement],[LTBE],[Misc],[Off-Season],[Option],[Other Compensation],[Other Terms],[P5],[PCMS Misc],[PF]
											  ,[ReAllocation],[Reporting Bonus],[Roster Bonus],[Salary Advance],[Signing Bonus],[Termination Pay]
											  ,[Vet Cap Credit])) AS pvt
	 WHERE Season >= 2011
	   AND ToDate IS NULL
  ORDER BY PlayerID
		  ,Season

		  
/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that has future guaranteed money.

This needs to have a season so that it doesn't get added to all future seasons.

Note that sometimes players will have multiple rows in this table. For instance if they have future p5 and
future roster bonus guaranteed (i.e. Carson Palmer in 2016). Because you do a sum in the subselect when 
creating the final table, both amounts are taken into account there.

OUTPUT TABLES:
#temp_future_guaranteed_money

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

DECLARE @current_season INT
SELECT @current_season = (SELECT season FROM Analytics.dbo.map_nfl_league_year_dates WHERE GETDATE() BETWEEN league_year_start AND league_year_end)

-- Check if #temp_future_guaranteed_money_prev_seasons exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_future_guaranteed_money_prev_seasons') IS NOT NULL
	DROP TABLE #temp_future_guaranteed_money_prev_seasons

    SELECT cg.PlayerID AS nfl_player_id
	      ,cg.Season AS season
		  ,cg.ClubID AS nfl_club_id
		  ,cg.Guar_Cap AS future_guaranteed_money
	      ,RANK() OVER (PARTITION BY PlayerID, cg.Season, ClubID ORDER BY COALESCE(ToDate,'12/31/2088') DESC, ChangeDate) AS guarantee_order
	  INTO #temp_future_guaranteed_money_prev_seasons
	  FROM ClubDB.dbo.CapGuarantee cg
INNER JOIN Analytics.dbo.map_nfl_league_year_dates ld
		ON cg.Season = ld.season
	 WHERE Effective = 1
	   --AND Finalized = 1
	   --AND PotentialGuarantee = 0
	   AND cg.Season >= 2011
	   AND cg.Season < @current_season
	   AND ChangeDate < regular_season_end
  ORDER BY cg.PlayerID
	      ,cg.Season
		  ,cg.ClubID

/*	   
SELECT *
FROM #temp_cap_guarantee_prev_seasons
WHERE PlayerID = 28037
ORDER BY Season, guarantee_order
*/

-- Check if #temp_future_guaranteed_money exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_future_guaranteed_money') IS NOT NULL
	DROP TABLE #temp_future_guaranteed_money

    SELECT cg.PlayerID AS nfl_player_id
	      ,cg.Season AS season
		  ,cg.ClubID AS nfl_club_id
		  ,cg.Guar_Cap AS future_guaranteed_money
	      ,1 AS guarantee_order
	  INTO #temp_future_guaranteed_money
	  FROM ClubDB.dbo.CapGuarantee cg
	 WHERE Effective = 1
	   AND cg.Season >= @current_season
	   AND ToDate IS NULL
  ORDER BY cg.PlayerID
	      ,cg.Season
		  ,cg.ClubID

/*	   
SELECT *
FROM #temp_future_guaranteed_money
WHERE nfl_player_id = 35441
ORDER BY Season, guarantee_order
*/

INSERT INTO #temp_future_guaranteed_money
 	 SELECT *
	   FROM #temp_future_guaranteed_money_prev_seasons
	  WHERE guarantee_order = 1

/*	   
SELECT *
FROM #temp_future_guaranteed_money
WHERE nfl_player_id = 32230
ORDER BY Season
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with the potential bonus acceleration if a player is cut. 

OUTPUT TABLES:
#temp_bonus_acceleration

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_bonus_acceleration exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_bonus_acceleration') IS NOT NULL
	DROP TABLE #temp_bonus_acceleration

    SELECT PlayerID AS nfl_player_id
		  ,Season AS season
		  ,ClubID AS nfl_club_id
		  ,(SELECT SUM(SB) FROM ClubDB.dbo.CapRollup cap2 WHERE cap.PlayerID = cap2.PlayerID AND cap2.season >= cap.season AND cap2.ToDate IS NULL AND cap.ClubID = cap2.ClubID) AS bonus_acceleration
		  ,SB AS bonus_acceleration_post_june_1
		  ,(SELECT SUM(SB) FROM ClubDB.dbo.CapRollup cap2 WHERE cap.PlayerID = cap2.PlayerID AND cap2.season >= cap.season AND cap2.ToDate IS NULL AND cap.ClubID = cap2.ClubID) - SB AS bonus_acceleration_next_season_post_june_1
	  INTO #temp_bonus_acceleration
	  FROM ClubDB.dbo.CapRollup cap
	  WHERE cap.ToDate IS NULL
		AND cap.season >= 2011

/*
SELECT * 
FROM #temp_bonus_acceleration
WHERE nfl_player_id = 37255
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table to determine already paid roster bonuses.

OUTPUT TABLES:
#temp_already_paid_roster_bonus

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_already_paid_roster_bonus exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_already_paid_roster_bonus') IS NOT NULL
	DROP TABLE #temp_already_paid_roster_bonus

    SELECT CF.PlayerID AS nfl_player_id
		  ,cf.Season AS season
		  ,cf.ClubID  AS nfl_club_id
		  ,Amount AS already_paid_roster_bonus
	  INTO #temp_already_paid_roster_bonus
	  FROM [ClubDB].[dbo].[CashFlowValue] cf
INNER JOIN [ClubDB].[dbo].[CapGuarantee] cg
		ON cf.PlayerID = cg.PlayerID
	   AND cf.ClubID = cg.ClubID
	   AND cf.ContractID = cg.ContractID
	   AND cf.SectionID = cg.SectionID
	   AND cg.Effective = 1
INNER JOIN #temp_cap_details cap
		ON cf.PlayerID = cap.nfl_player_id
	   AND cf.ClubID = cap.nfl_club_id
	   AND cf.Season = cap.season
	   AND cf.Amount = cap.cap_details_roster_bonus
	 WHERE UPPER(SectionType) = 'ROSTER BONUS'
	   AND [Week] IS NULL
	   AND cf.Season = @current_season

/*
SELECT * 
FROM #temp_already_paid_roster_bonus
WHERE nfl_player_id = 28037
*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table with a player's cap hit and dead money.

Sandy's old SAS code added a day to the cap end date and then called the
variable up_to_but_not_including. Below is the code if you want to change
to that at some point.

COALESCE(DATEADD(DAY,1, ToDate),'12/31/2088')

The reason to include current year roster bonus in dead money calculation is that typically roster bonuses paid
in first few days of the league year count on that year's cap. So if we are already date wise in the current league
year, that bonus has likely already been paid, so it would be dead money.  May not be perfect but seems to work
well for now. You also subtract out the "already guaranteed" roster bonus to avoid double counting.

OUTPUT TABLES:
#temp_cap_hits

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

DECLARE @current_season INT
SELECT @current_season = (SELECT season FROM Analytics.dbo.map_nfl_league_year_dates WHERE GETDATE() BETWEEN league_year_start AND league_year_end)

-- Check if #temp_cap_hits exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_hits') IS NOT NULL
	DROP TABLE #temp_cap_hits

    SELECT PlayerID AS nfl_player_id
		  ,CONCAT(last_name,', ',goes_by) AS player
	      ,ClubID AS nfl_club_id
		  --,cl.id AS bane_club_id
		  ,cap.Season AS season
		  ,CASE WHEN CapAmt > 0 AND Cash = 0 AND cap.season >= 2002 AND Para5 = 0 THEN 1 
				WHEN cap.season = @current_season AND cap.ClubID <> (SELECT ClubID FROM ClubDB.dbo.PlayerExtract pe WHERE pe.PlayerID = cap.PlayerID) THEN 1
				ELSE 0
		   END AS dead_money_flag
		  ,CapAmt AS cap_amount
		  ,Cash AS cash_amount
		  ,Para5 AS cap_paragraph_5
		  ,CashP5 AS cash_paragraph_5
		  ,SB AS cap_signing_bonus
		  ,CashSB_SB AS cash_signing_bonus
		  ,LTBE AS cap_likely_to_be_earned
		  ,cap_details_ltbe
		  ,cap_details_offseason_bonus
		  ,cash_details_offseason_bonus
		  ,cap_details_option_bonus
		  ,cash_details_option_bonus
		  ,cap_details_roster_bonus
		  ,cash_details_roster_bonus
		  ,COALESCE(bonus_acceleration,0)
					+ COALESCE((SELECT SUM(future_guaranteed_money) FROM #temp_future_guaranteed_money fu WHERE cap.PlayerID = fu.nfl_player_id AND cap.ClubID = fu.nfl_club_id AND fu.season >= cap.Season),0)
					+ CASE WHEN cap.Season = @current_season THEN COALESCE(cap_details_roster_bonus,0) - COALESCE(already_paid_roster_bonus,0) ELSE 0 END
		   AS dead_cap
		  ,COALESCE(SB,0)
					+ COALESCE((SELECT SUM(future_guaranteed_money) FROM #temp_future_guaranteed_money fu WHERE cap.PlayerID = fu.nfl_player_id AND cap.ClubID = fu.nfl_club_id AND fu.season >= cap.Season),0)
					+ CASE WHEN cap.Season = @current_season THEN COALESCE(cap_details_roster_bonus,0) - COALESCE(already_paid_roster_bonus,0) ELSE 0 END
		   AS dead_cap_post_june_1
		  ,COALESCE(bonus_acceleration_next_season_post_june_1,0)
					+ COALESCE((SELECT SUM(future_guaranteed_money) FROM #temp_future_guaranteed_money fu WHERE cap.PlayerID = fu.nfl_player_id AND cap.ClubID = fu.nfl_club_id AND fu.season > cap.Season),0)
		   AS dead_cap_next_season_post_june_1
		  ,COALESCE(bonus_acceleration,0)
					+ CASE WHEN cap.Season = @current_season THEN COALESCE(cap_details_roster_bonus,0) - COALESCE(already_paid_roster_bonus,0) ELSE 0 END
		   AS dead_cap_trade
		  ,Misc AS cap_miscellaneous
		  ,PotAccel AS cap_potential_acceleration
		  ,FullP5 AS cap_full_paragraph_5
		  ,Top51Delta AS cap_top_51_delta
		  ,FromDate AS cap_start_date
		  ,ToDate AS cap_end_date
		  ,CASE WHEN FromDate < league_year_start THEN league_year_start ELSE FromDate END AS cap_season_start_date
		  ,CASE WHEN COALESCE(ToDate,'12/31/2088') > league_year_end THEN league_year_end ELSE COALESCE(ToDate,'12/31/2088') END AS cap_season_end_date
		  ,RANK() OVER (PARTITION BY PlayerID, ClubID, cap.Season ORDER BY COALESCE(ToDate,'12/31/2088') DESC, FromDate) AS cap_hit_order
	  INTO #temp_cap_hits
      FROM ClubDB.dbo.CapRollup cap
INNER JOIN Analytics.dbo.map_nfl_league_year_dates da
		ON cap.season = da.season
INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON cap.PlayerID = pl.nfl_id
/*INNER JOIN BaneProductionAnalytics.dbo.clubs cl
		ON cap.ClubID = cl.nfl_club_id
	   AND cl.is_disabled = 0*/
 LEFT JOIN #temp_cap_details cd
		ON cd.nfl_player_id = cap.PlayerID
	   AND cd.Season = cap.Season
	   AND cd.nfl_club_id = cap.ClubID
 LEFT JOIN #temp_cash_details csh
		ON csh.nfl_player_id = cap.PlayerID
	   AND csh.Season = cap.Season
	   AND csh.nfl_club_id = cap.ClubID
 LEFT JOIN #temp_bonus_acceleration ba
		ON ba.nfl_player_id = cap.PlayerID
	   AND ba.season = cap.season
	   AND ba.nfl_club_id = cap.ClubID
 LEFT JOIN #temp_already_paid_roster_bonus ag
		ON ag.nfl_player_id = cap.PlayerID
	   AND ag.season = cap.season
	   AND ag.nfl_club_id = cap.ClubID
	 WHERE 1=1
	   AND cap.season >= (SELECT MIN(FirstContractYear) FROM ClubDB.dbo.ContractRep WHERE EffectiveContract = 1)
	   AND (CapAmt + Para5 + SB + LTBE + PotAccel) <> 0
	   AND cap.ToDate IS NULL
  ORDER BY PlayerID
		  ,ClubID
		  ,season
		  ,FromDate

/*
SELECT * FROM #temp_cap_hits
WHERE cap_end_date IS NULL
WHERE nfl_player_id = 28037
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Add the cap and cash savings to the cap hit table.

OUTPUT TABLES:
#temp_cap_hits_with_savings

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_cap_hits_with_savings exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_cap_hits_with_savings') IS NOT NULL
	DROP TABLE #temp_cap_hits_with_savings

    SELECT *
		  ,COALESCE(cap_amount,0) - COALESCE(dead_cap,0) - CASE WHEN season <= @current_season THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END AS cap_savings
		  ,COALESCE(cap_amount,0) - COALESCE(dead_cap_post_june_1,0) - CASE WHEN season <= @current_season THEN COALESCE(cap_details_offseason_bonus,0) ELSE 0 END AS cap_savings_post_june_1
	  INTO #temp_cap_hits_with_savings
      FROM #temp_cap_hits

/*
SELECT * FROM #temp_cap_hits_with_savings
ORDER BY nfl_player_id, season, nfl_club_id
*/
